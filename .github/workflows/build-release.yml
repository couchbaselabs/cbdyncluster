on:
  push:
    tags:
      - "v*"
name: Build and Upload Releases
jobs:
  build:
    name: Build and Upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: ^1.13.6
      - name: Build project
        run: |
          GOOS=darwin GOARCH=amd64 go build -o cbdyncluster-macos
          GOOS=linux GOARCH=amd64 go build -o cbdyncluster-linux
          GOOS=windows GOARCH=amd64 go build -o cbdyncluster-windows.exe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          tag_name: "${{ github.ref }}"
          release_name: "Release ${{ github.ref }}"
          draft: false
          prerelease: false
      - name: Upload Linux Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: ./cbdyncluster-linux
          asset_name: cbdyncluster-linux
          asset_content_type: application/octet-stream
      - name: Upload OSX Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: ./cbdyncluster-macos
          asset_name: cbdyncluster-macos
          asset_content_type: application/octet-stream
      - name: Upload Windows Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: ./cbdyncluster-windows.exe
          asset_name: cbdyncluster-windows.exe
          asset_content_type: application/octet-stream
